spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  cloud:
    gcp:
      storage:
        credentials:
          location: ${GCP_CREDENTIAL_LOCATION}
        project-id: ${GCP_PROJECT_ID}
        bucket: ${GCP_BUCKET_NAME}
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: kakao
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: naver
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope: profile, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

rabbitmq:
  queue.name: feedimage.queue
  exchange.name: direct.exchange
  routing.key: feedimage.key

firebase:
  credentials:
    location: ${FIREBASE_KEY_LOCATION}

app-key:
  kakao: ${KAKAO_APP_KEY}
  google: ${GOOGLE_APP_KEY}

jwt:
  secret-key: ${JWT_SECRET_KEY}

client:
  url: ${CLIENT_URL}
  endpoint: ${CLIENT_ENDPOINT}

logging:
  level:
    com.sillim.recordit: debug  # ref: https://blog.datalust.co/choosing-the-right-log-levels/

server:
  tomcat:
    connection-timeout: ${TOMCAT_CONNECTION_TIMEOUT}
    accept-count: ${TOMCAT_ACCEPT_COUNT}
    max-connections: ${TOMCAT_MAX_CONNECTIONS}
    threads:
      min-spare: ${TOMCAT_THREAD_MIN_SPARE}
      max: ${TOMCAT_THREAD_MAX}

management:
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: prometheus
